---
title: "Labor Market - Sectors"
format:
  revealjs:
    margin: 0
execute:
    error: false
    message: false
    warning: false
---

```{r load_libraries}

library(tidyverse)

library(gt)

library(slider)

devtools::load_all()

```

```{r params}

params = list()


params$topics = c(
  'employment',
  'unemployment',
  'job vacancies',
  'minimum wage',
  'working hours',
  'layoffs',
  'average wage',
  'deficit'
) 

params$detrend_win = 2

params$smooth_win = 5

params$roll_cor_win = 5

```



```{r load_data}

file_path = paste0("C:\\Users\\internet\\",
                   "OneDrive - Bank Of Israel\\current_work",
                   "\\real estate sentiment\\data\\labor_market\\sectors",
                   "\\labor_sentiment_hightech_4o-mini_25_05_2025.rds")




sentiment_df = import_sentiment_df(file_path)


```

```{r validation}

val_table_path = paste0(Sys.getenv("USERPROFILE"),
                        "\\OneDrive - Bank Of Israel\\",
                        "current_work\\real estate sentiment\\data\\labor_market\\sectors",
                        "\\labor_market_hightech_indicator_correspondence.csv")

indicator_path = paste0(Sys.getenv("USERPROFILE"),
                        "\\OneDrive - Bank Of Israel\\",
                        "current_work\\real estate sentiment\\data\\labor_market\\sectors\\")


validation_data = construct_validation_df(detrend_win = params$detrend_win,
                                          smooth_win = params$smooth_win,
                                          validation_table_path = val_table_path,
                                          benchmark_folder_path = indicator_path,
                                          numeric_sentiment_df = sentiment_df,
                                          is_fusion_format = FALSE)


```


##

```{r plot_comparison_table}

validation_data %>% 
  select(topic, indicator) %>% 
  distinct() %>% 
  mutate(indicator = as_factor(indicator)) %>% 
  gt() %>% 
  tab_header(
    title = md("**Validation plan**"))%>%
  tab_options(
    table.font.size = 20, # General font size
    heading.title.font.size = 40, # Title font size
  ) %>%
  tab_style(
    style = list(
      cell_text(
        size = px(30),
        weight = "bold",    # Make the text bold
      )
    ),
    locations = cells_column_labels()
  )

```



##

```{r plot_all_article_distribution_daily}

sentiment_df %>% 
  select(date, article_id) %>% 
  distinct() %>% 
  count(date) %>% 
  ggplot(aes(date, n)) + 
  geom_col() + 
  xlab(NULL) + ylab(NULL) + ggtitle("Number of unique articles (daily, including irrelevant)")

```




##

```{r plot_relevant_article_distribution_monthly}

sentiment_df %>% 
  filter(!sentiment %in% c("irrelevant", "null")) %>% 
  mutate(date = as.yearmon(date)) %>% 
  select(date, article_id) %>% 
  distinct() %>% 
  count(date) %>% 
  ggplot(aes(date, n)) + 
  geom_col() + 
  xlab(NULL) + ylab(NULL) + ggtitle("Number of unique articles (monthly, relevant only)")


```





# Sentiment matrix

```{r sentiment_matrix}

 sentiment_df %>% 
  group_by(date = as.yearmon(date), topic) %>% 
  summarise(sentiment_num = mean(sentiment_num), .groups = "drop")%>% 
  group_by(topic) %>% 
  summarise(sentiment_num = mean(sentiment_num), .groups = "drop") %>% 
  ggplot(aes(sentiment_num,topic)) + 
  geom_col() +
  geom_col() +
  geom_text(aes(label = round(sentiment_num,2)), hjust = 1.25) + 
  # scale_fill_gradientn(colors = c("red", "yellow", "green")) + 
  xlab(NULL) + ylab(NULL) + ggtitle("Sentiment by topics") + 
  theme(axis.text.x = element_text(angle = 90)) + 
  NULL

```

# Correlation matrix

```{r}

validation_data %>% 
  select(indicator, topic, comparison_df) %>% 
  unnest(cols = c("indicator", "topic", "comparison_df")) %>% 
  group_by(indicator, topic) %>% 
  summarise(cor = cor(sentiment_num,benchmark), .groups = "drop") %>% 
  ggplot(aes(topic, indicator)) + 
  geom_tile() +
  geom_tile(aes(fill = cor)) +
  geom_text(aes(label = round(cor,2))) + 
  scale_fill_gradientn(colors = c("red", "yellow", "green")) + 
  xlab(NULL) + ylab(NULL) + 
  theme(axis.text.x = element_text(angle = 90)) + 
  NULL

```

## Job vacancies

```{r}

validation_data %>% 
  filter(topic == "job vacancies") %>% 
  select(indicator, comparison_df) %>% 
  unnest(comparison_df) %>% 
  group_by(indicator) %>% 
  mutate(across(c("sentiment_num", "benchmark"), ~scale(.)[,1])) %>%
  ungroup() %>% 
  pivot_longer(cols = c("sentiment_num", "benchmark")) %>% 
  ggplot(aes(date, value, color = name)) + 
  geom_line() + 
  facet_wrap(~indicator, scales = "free")

```

## Average wage

```{r}
validation_data %>% 
  filter(topic == "average wage") %>% 
  select(indicator, comparison_df) %>% 
  unnest(comparison_df) %>% 
  group_by(indicator) %>% 
  mutate(across(c("sentiment_num", "benchmark"), ~scale(.)[,1])) %>%
  ungroup() %>% 
  pivot_longer(cols = c("sentiment_num", "benchmark")) %>% 
  ggplot(aes(date, value, color = name)) + 
  geom_line() + 
  facet_wrap(~indicator, scales = "free")

```

