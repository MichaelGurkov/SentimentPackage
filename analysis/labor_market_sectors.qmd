---
title: "Labor Market"
format:
  revealjs:
    margin: 0
execute:
    error: false
    message: false
    warning: false
---

```{r load_libraries}

library(tidyverse)

library(gt)

library(slider)

devtools::load_all()

```

```{r params}

params = list()


params$topics = c(
  'employment',
  'unemployment',
  'job vacancies',
  'minimum wage',
  'working hours',
  'layoffs',
  'average wage',
  'deficit'
) 

params$detrend_win = 2

params$smooth_win = 3

params$roll_cor_win = 5

```



```{r load_data}

file_path = paste0("C:\\Users\\internet\\",
                   "OneDrive - Bank Of Israel\\current_work",
                   "\\real estate sentiment\\data\\labor_market\\sectors",
                   "\\labor_sentiment_hightech_4o-mini_25_05_2025.rds")




sentiment_df = import_sentiment_df(file_path)


```

```{r validation}

val_table_path = paste0(Sys.getenv("USERPROFILE"),
                        "\\OneDrive - Bank Of Israel\\",
                        "current_work\\real estate sentiment\\data\\labor_market\\sectors",
                        "\\labor_market_hightech_indicator_correspondence.csv")

indicator_path = paste0(Sys.getenv("USERPROFILE"),
                        "\\OneDrive - Bank Of Israel\\",
                        "current_work\\real estate sentiment\\data\\labor_market\\sectors")


validation_data = construct_validation_df(detrend_win = params$detrend_win,
                                          smooth_win = params$smooth_win,
                                          validation_table_path = val_table_path,
                                          benchmark_folder_path = indicator_path,
                                          numeric_sentiment_df = sentiment_df,
                                          is_fusion_format = FALSE)


```


##

```{r plot_comparison_table}

validation_data %>% 
  filter(indicator_type == "hard") %>%
  select(indicator_type,topic, indicator) %>% 
  distinct() %>% 
  mutate(indicator = as_factor(indicator)) %>% 
  gt() %>% 
  tab_header(
    title = md("**Validation plan**"))%>%
  tab_options(
    table.font.size = 20, # General font size
    heading.title.font.size = 40, # Title font size
  ) %>%
  tab_style(
    style = list(
      cell_text(
        size = px(30),
        weight = "bold",    # Make the text bold
      )
    ),
    locations = cells_column_labels()
  )

```



##

```{r plot_all_article_distribution_daily}

sentiment_df %>% 
  select(date, article_id) %>% 
  distinct() %>% 
  count(date) %>% 
  ggplot(aes(date, n)) + 
  geom_col() + 
  xlab(NULL) + ylab(NULL) + ggtitle("Number of unique articles (daily, including irrelevant)")

```




##

```{r plot_relevant_article_distribution_monthly}

sentiment_df %>% 
  filter(!sentiment %in% c("irrelevant", "null")) %>% 
  mutate(date = as.yearmon(date)) %>% 
  select(date, article_id) %>% 
  distinct() %>% 
  count(date) %>% 
  ggplot(aes(date, n)) + 
  geom_col() + 
  xlab(NULL) + ylab(NULL) + ggtitle("Number of unique articles (monthly, relevant only)")


```





# Sentiment matrix

```{r sentiment_matrix}

 sentiment_df %>% 
  group_by(date = as.yearmon(date),stakeholder, topic) %>% 
  summarise(sentiment_num = mean(sentiment_num), .groups = "drop")%>% 
  group_by(stakeholder, topic) %>% 
  summarise(sentiment_num = mean(sentiment_num), .groups = "drop") %>% 
  ggplot(aes(topic, stakeholder)) + 
  geom_tile() +
  geom_tile(aes(fill = sentiment_num)) +
  geom_text(aes(label = round(sentiment_num,2))) + 
  scale_fill_gradientn(colors = c("red", "yellow", "green")) + 
  xlab(NULL) + ylab(NULL) + 
  theme(axis.text.x = element_text(angle = 90)) + 
  NULL

```

# Correlation matrix

```{r}

validation_data %>% 
  select(stakeholder, topic, comparison_df) %>% 
  unnest(cols = c("stakeholder", "topic", "comparison_df")) %>% 
  group_by(stakeholder, topic) %>% 
  summarise(cor = cor(sentiment_num,benchmark), .groups = "drop") %>% 
  ggplot(aes(topic, stakeholder)) + 
  geom_tile() +
  geom_tile(aes(fill = cor)) +
  geom_text(aes(label = round(cor,2))) + 
  scale_fill_gradientn(colors = c("red", "yellow", "green")) + 
  xlab(NULL) + ylab(NULL) + 
  theme(axis.text.x = element_text(angle = 90)) + 
  NULL

```



# Government

```{r plot_government}

validation_data %>% 
  filter(stakeholder == "government") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  mutate(across(c("sentiment_num", "benchmark"), scale)) %>% 
  ungroup() %>% 
  pivot_longer(-c(date, topic)) %>% 
  ggplot(aes(date, value, color = name)) + 
  geom_line() + 
  facet_wrap(~topic, scale = "free")

```

## 

```{r rolling_correlation_government}


validation_data %>% 
  filter(stakeholder == "government") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  mutate(roll_cor = slide2_dbl(sentiment_num, benchmark, .f = cor,
                          .before = params$roll_cor_win * 12, .complete = TRUE)) %>% 
  ungroup() %>% 
  ggplot(aes(date, roll_cor)) + 
  geom_line() + 
  facet_wrap(~topic, scale = "free")


```

## 

```{r table_government_cors}

validation_data %>% 
  filter(stakeholder == "government") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  summarise(cor = cor(sentiment_num, benchmark)) %>% 
  mutate(cor = round(cor, 2)) %>% 
  ungroup() %>% 
  gt() %>% 
  tab_header(title = "Correlations for Government")

```


# Employees

```{r plot_employees}

validation_data %>% 
  filter(stakeholder == "employees") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  mutate(across(c("sentiment_num", "benchmark"), scale)) %>% 
  ungroup() %>% 
  pivot_longer(-c(date, topic)) %>% 
  ggplot(aes(date, value, color = name)) + 
  geom_line() + 
  facet_wrap(~topic, scale = "free")

```


## 

```{r rolling_correlation_employees}


validation_data %>% 
  filter(stakeholder == "employees") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  mutate(roll_cor = slide2_dbl(sentiment_num, benchmark, .f = cor,
                          .before = params$roll_cor_win * 12, .complete = TRUE)) %>% 
  ungroup() %>% 
  ggplot(aes(date, roll_cor)) + 
  geom_line() + 
  facet_wrap(~topic, scale = "free")


```

## 

```{r table_employees_cors}

validation_data %>% 
  filter(stakeholder == "employees") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  summarise(cor = cor(sentiment_num, benchmark)) %>% 
  mutate(cor = round(cor, 2)) %>% 
  ungroup() %>% 
  gt() %>% 
  tab_header(title = "Correlations for Employees")

```



# Employers

```{r plot_employers}

validation_data %>% 
  filter(stakeholder == "employers") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  mutate(across(c("sentiment_num", "benchmark"), scale)) %>% 
  ungroup() %>% 
  pivot_longer(-c(date, topic)) %>% 
  ggplot(aes(date, value, color = name)) + 
  geom_line() + 
  facet_wrap(~topic, scale = "free")

```


## 

```{r rolling_correlation_employers}


validation_data %>% 
  filter(stakeholder == "employers") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  mutate(roll_cor = slide2_dbl(sentiment_num, benchmark, .f = cor,
                          .before = params$roll_cor_win * 12, .complete = TRUE)) %>% 
  ungroup() %>% 
  ggplot(aes(date, roll_cor)) + 
  geom_line() + 
  facet_wrap(~topic, scale = "free")


```

## 

```{r table_employers_cors}

validation_data %>% 
  filter(stakeholder == "employers") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  summarise(cor = cor(sentiment_num, benchmark)) %>% 
  mutate(cor = round(cor, 2)) %>% 
  ungroup() %>% 
  gt() %>% 
  tab_header(title = "Correlations for Employers")

```


# Labor Unions

```{r plot_labor_unions}

validation_data %>% 
  filter(stakeholder == "labor unions") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  mutate(across(c("sentiment_num", "benchmark"), scale)) %>% 
  ungroup() %>% 
  pivot_longer(-c(date, topic)) %>% 
  ggplot(aes(date, value, color = name)) + 
  geom_line() + 
  facet_wrap(~topic, scale = "free")

```


## 

```{r rolling_correlation_labor_union}


validation_data %>% 
  filter(stakeholder == "labor unions") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  mutate(roll_cor = slide2_dbl(sentiment_num, benchmark, .f = cor,
                          .before = params$roll_cor_win * 12, .complete = TRUE)) %>% 
  ungroup() %>% 
  ggplot(aes(date, roll_cor)) + 
  geom_line() + 
  facet_wrap(~topic, scale = "free")


```

## 

```{r table_labor_unions_cors}

validation_data %>% 
  filter(stakeholder == "labor unions") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  summarise(cor = cor(sentiment_num, benchmark)) %>% 
  mutate(cor = round(cor, 2)) %>% 
  ungroup() %>% 
  gt() %>% 
  tab_header(title = "Correlations for Labor Union")

```


# Unemployed

```{r plot_unemployed}

validation_data %>% 
  filter(stakeholder == "unemployed") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  mutate(across(c("sentiment_num", "benchmark"), scale)) %>% 
  ungroup() %>% 
  pivot_longer(-c(date, topic)) %>% 
  ggplot(aes(date, value, color = name)) + 
  geom_line() + 
  facet_wrap(~topic, scale = "free")

```

## 

```{r rolling_correlation_unemployed}


validation_data %>% 
  filter(stakeholder == "unemployed") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  mutate(roll_cor = slide2_dbl(sentiment_num, benchmark, .f = cor,
                          .before = params$roll_cor_win * 12, .complete = TRUE)) %>% 
  ungroup() %>% 
  ggplot(aes(date, roll_cor)) + 
  geom_line() + 
  facet_wrap(~topic, scale = "free")


```

## 

```{r table_unemployed_cors}

validation_data %>% 
  filter(stakeholder == "unemployed") %>% 
  select(topic, comparison_df) %>% 
  unnest(cols = c("topic", "comparison_df")) %>% 
  group_by(topic) %>% 
  summarise(cor = cor(sentiment_num, benchmark)) %>% 
  mutate(cor = round(cor, 2)) %>% 
  ungroup() %>% 
  gt() %>% 
  tab_header(title = "Correlations for Unemployed")

```

